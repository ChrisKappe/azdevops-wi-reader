// Generated by https://quicktype.io

namespace AzDevOpsWiReader.Shared
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class WorkitemsbatchResponse
    {
        [JsonProperty("count")]
        public long Count { get; set; }

        [JsonProperty("value")]
        public Workitem[] Workitems { get; set; }
    }

    public partial class Workitem
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("rev")]
        public long Rev { get; set; }

        [JsonProperty("fields")]
        public Dictionary<string, object> Fields { get; set; }

        [JsonProperty("url")]
        public Uri Url { get; set; }

        [JsonProperty("commentVersionRef", NullValueHandling = NullValueHandling.Ignore)]
        public CommentVersionRef CommentVersionRef { get; set; }
    }

    public partial class CommentVersionRef
    {
        [JsonProperty("commentId")]
        public long CommentId { get; set; }

        [JsonProperty("version")]
        public long Version { get; set; }

        [JsonProperty("url")]
        public Uri Url { get; set; }
    }

    public partial class WorkitemsbatchResponse
    {
        public static WorkitemsbatchResponse FromJson(string json) => JsonConvert.DeserializeObject<WorkitemsbatchResponse>(json, WorkitemsbatchResponseConverter.Settings);
    }

    public static class WorkitemsbatchResponseSerialize
    {
        public static string ToJson(this WorkitemsbatchResponse self) => JsonConvert.SerializeObject(self, WorkitemsbatchResponseConverter.Settings);
    }

    internal static class WorkitemsbatchResponseConverter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters = {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
