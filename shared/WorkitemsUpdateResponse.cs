// Generated by https://quicktype.io

namespace AzDevOpsWiReader.Shared
{
    using System;
    using System.Collections.Generic;
    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class WorkitemsUpdateResponse
    {
        [JsonProperty("count")]
        public long Count { get; set; }

        [JsonProperty("value")]
        public WorkitemsUpdate[] WorkitemsUpdates { get; set; }
    }

    public partial class WorkitemsUpdate
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("workItemId")]
        public long WorkItemId { get; set; }

        [JsonProperty("rev")]
        public long Rev { get; set; }

        [JsonProperty("revisedBy")]
        public RevisedBy RevisedBy { get; set; }

        [JsonProperty("revisedDate")]
        public DateTimeOffset RevisedDate { get; set; }

        [JsonProperty("fields")]
        public Dictionary<string, Change> Fields { get; set; }

        [JsonProperty("relations", NullValueHandling = NullValueHandling.Ignore)]
        public Relations Relations { get; set; }

        [JsonProperty("url")]
        public Uri Url { get; set; }
    }

    public class Change
    {
        [JsonProperty("oldValue")]
        public object OldValue { get; set; }

        [JsonProperty("newValue")]
        public object NewValue { get; set; }
    }

    public partial class Relations
    {
        [JsonProperty("added")]
        public Added[] Added { get; set; }
    }

    public partial class Added
    {
        [JsonProperty("rel")]
        public string Rel { get; set; }

        [JsonProperty("url")]
        public Uri Url { get; set; }

        [JsonProperty("attributes")]
        public Attributes Attributes { get; set; }
    }

    public partial class Attributes
    {
        [JsonProperty("isLocked")]
        public bool IsLocked { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }
    }

    public partial class RevisedBy
    {
        [JsonProperty("displayName")]
        public string DisplayName { get; set; }

        [JsonProperty("url")]
        public Uri Url { get; set; }

        [JsonProperty("_links")]
        public Links Links { get; set; }

        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("uniqueName")]
        public string UniqueName { get; set; }

        [JsonProperty("imageUrl")]
        public Uri ImageUrl { get; set; }

        [JsonProperty("descriptor")]
        public string Descriptor { get; set; }

        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }
    }

    public partial class WorkitemsUpdateResponse
    {
        public static WorkitemsUpdateResponse FromJson(string json) => JsonConvert.DeserializeObject<WorkitemsUpdateResponse>(json, WorkitemsUpdateResponseConverter.Settings);
    }

    public static class WorkitemsUpdateResponseSerialize
    {
        public static string ToJson(this WorkitemsUpdateResponse self) => JsonConvert.SerializeObject(self, WorkitemsUpdateResponseConverter.Settings);
    }

    internal static class WorkitemsUpdateResponseConverter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters = {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
