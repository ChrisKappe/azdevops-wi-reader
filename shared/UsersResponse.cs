// Generated by https://quicktype.io

namespace AzDevOpsWiReader.Shared
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class UsersResponse
    {
        [JsonProperty("members")]
        public Member[] Members { get; set; }

        [JsonProperty("continuationToken")]
        public string ContinuationToken { get; set; }

        [JsonProperty("totalCount")]
        public long TotalCount { get; set; }
    }

    public partial class Member
    {
        [JsonProperty("id")]
        public string Id { get; set; }

        [JsonProperty("user")]
        public User User { get; set; }

        [JsonProperty("accessLevel")]
        public AccessLevel AccessLevel { get; set; }

        [JsonProperty("lastAccessedDate")]
        public DateTimeOffset LastAccessedDate { get; set; }

        [JsonProperty("dateCreated")]
        public DateTimeOffset DateCreated { get; set; }

        [JsonProperty("projectEntitlements")]
        public object[] ProjectEntitlements { get; set; }

        [JsonProperty("extensions")]
        public object[] Extensions { get; set; }

        [JsonProperty("groupAssignments")]
        public object[] GroupAssignments { get; set; }
    }

    public partial class AccessLevel
    {
        [JsonProperty("licensingSource")]
        public string LicensingSource { get; set; }

        [JsonProperty("accountLicenseType")]
        public string AccountLicenseType { get; set; }

        [JsonProperty("msdnLicenseType")]
        public string MsdnLicenseType { get; set; }

        [JsonProperty("licenseDisplayName")]
        public string LicenseDisplayName { get; set; }

        [JsonProperty("status")]
        public string Status { get; set; }

        [JsonProperty("statusMessage")]
        public string StatusMessage { get; set; }

        [JsonProperty("assignmentSource")]
        public string AssignmentSource { get; set; }
    }

    public partial class User
    {
        [JsonProperty("subjectKind")]
        public string SubjectKind { get; set; }

        [JsonProperty("directoryAlias", NullValueHandling = NullValueHandling.Ignore)]
        public string DirectoryAlias { get; set; }

        [JsonProperty("domain")]
        public string Domain { get; set; }

        [JsonProperty("principalName")]
        public string PrincipalName { get; set; }

        [JsonProperty("mailAddress")]
        public string MailAddress { get; set; }

        [JsonProperty("origin")]
        public string Origin { get; set; }

        [JsonProperty("originId")]
        public string OriginId { get; set; }

        [JsonProperty("displayName")]
        public string DisplayName { get; set; }

        [JsonProperty("_links")]
        public Links Links { get; set; }

        [JsonProperty("url")]
        public Uri Url { get; set; }

        [JsonProperty("descriptor")]
        public string Descriptor { get; set; }

        [JsonProperty("metaType", NullValueHandling = NullValueHandling.Ignore)]
        public string MetaType { get; set; }
    }

    public partial class Links
    {
        [JsonProperty("self")]
        public Avatar Self { get; set; }

        [JsonProperty("memberships")]
        public Avatar Memberships { get; set; }

        [JsonProperty("membershipState")]
        public Avatar MembershipState { get; set; }

        [JsonProperty("storageKey")]
        public Avatar StorageKey { get; set; }

        [JsonProperty("avatar")]
        public Avatar Avatar { get; set; }
    }

    public partial class Avatar
    {
        [JsonProperty("href")]
        public Uri Href { get; set; }
    }

    public partial class UsersResponse
    {
        public static UsersResponse FromJson(string json) => JsonConvert.DeserializeObject<UsersResponse>(json, UsersResponseConverter.Settings);
    }

    public static class UsersResponseSerialize
    {
        public static string ToJson(this UsersResponse self) => JsonConvert.SerializeObject(self, UsersResponseConverter.Settings);
    }

    internal static class UsersResponseConverter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters = {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
