// Generated by https://quicktype.io

namespace AzDevOpsWiReader
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class QueryResponse
    {
        [JsonProperty("queryType")]
        public string QueryType { get; set; }

        [JsonProperty("queryResultType")]
        public string QueryResultType { get; set; }

        [JsonProperty("asOf")]
        public DateTimeOffset AsOf { get; set; }

        [JsonProperty("columns")]
        public Column[] Columns { get; set; }

        [JsonProperty("sortColumns")]
        public SortColumn[] SortColumns { get; set; }

        [JsonProperty("workItemRelations")]
        public WorkItemRelation[] WorkItemRelations { get; set; }

        [JsonProperty("workItems")]
        public WorkItem[] WorkItems { get; set; }
    }

    public partial class Column
    {
        [JsonProperty("referenceName")]
        public string ReferenceName { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("url")]
        public Uri Url { get; set; }
    }

    public partial class SortColumn
    {
        [JsonProperty("field")]
        public Column Field { get; set; }

        [JsonProperty("descending")]
        public bool Descending { get; set; }
    }

    public partial class WorkItem
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("url")]
        public Uri Url { get; set; }
    }

    public partial class WorkItemRelation
    {
        [JsonProperty("rel")]
        public string Rel { get; set; }

        [JsonProperty("source")]
        public Target Source { get; set; }

        [JsonProperty("target")]
        public Target Target { get; set; }
    }

    public partial class Target
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("url")]
        public Uri Url { get; set; }
    }

    public partial class QueryResponse
    {
        public static QueryResponse FromJson(string json) => JsonConvert.DeserializeObject<QueryResponse>(json, QueryResponseConverter.Settings);
    }

    public static class QueryResponseSerialize
    {
        public static string ToJson(this QueryResponse self) => JsonConvert.SerializeObject(self, QueryResponseConverter.Settings);
    }

    internal static class QueryResponseConverter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters = {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
